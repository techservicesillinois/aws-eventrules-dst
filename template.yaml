AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Function to handle EventBridge Event rules for daylight savings time.

Globals:
  Function:
    Runtime: python3.8
    MemorySize: 128
    Timeout: 120

Parameters:
  LocalTimezone:
    Type: String
    Description: Local timezone name.
    Default: US-Central
    AllowedValues:
      - US-Eastern
      - US-Central
      - US-Mountain
      - US-Pacific

  LambdaMonitorTemplateURL:
    Type: String
    Description: URL to the template for Lambda monitoring.
    Default: "https://example.org/template.yaml"
  LambdaMonitorAlarmTopicARN:
    Type: String
    Description: ARN of the SNS Topic that receives alarm notifications.
    Default: ""
  LogSubscriptionARN:
    Type: String
    Description: ARN to subscribe CloudWatchLogs to.
    Default: ""
  LogKMSKeyARN:
    Type: String
    Description: ARN to encrypt Logs with.
    Default: ""

Mappings:
  TimezoneMap:
    US-Eastern:
      TZ: US/Eastern
      Abbrevs: EDT,EST
      STDAbbrev: EST
      DSTAbbrev: EDT
      STDTransition: cron(1 6 ? NOV SUN#1 *)
      DSTTransition: cron(1 7 ? MAR SUN#2 *)
    US-Central:
      TZ: US/Central
      Abbrevs: CDT,CST
      STDAbbrev: CST
      DSTAbbrev: CDT
      STDTransition: cron(1 7 ? NOV SUN#1 *)
      DSTTransition: cron(1 8 ? MAR SUN#2 *)
    US-Mountain:
      TZ: US/Mountain
      Abbrevs: MDT,MST
      STDAbbrev: MST
      DSTAbbrev: MDT
      STDTransition: cron(1 8 ? NOV SUN#1 *)
      DSTTransition: cron(1 9 ? MAR SUN#2 *)
    US-Pacific:
      TZ: US/Pacific
      Abbrevs: PDT,PST
      STDAbbrev: PST
      DSTAbbrev: PDT
      STDTransition: cron(1 9 ? NOV SUN#1 *)
      DSTTransition: cron(1 10 ? MAR SUN#2 *)

Conditions:
  HasLogEncryption: !Not [ !Equals [ !Ref LogKMSKeyARN, "" ] ]
  HasLambdaMonitor: !Not [ !Equals [ !Ref LambdaMonitorTemplateURL, "https://example.org/template.yaml" ] ]

Resources:
  EventsDSTFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - EventsDSTFunctionLogs
    Properties:
      FunctionName: !Sub "${AWS::StackName}-EventsDST"
      CodeUri: src/
      Handler: events_dst.handler.lambda_handler
      Environment:
        Variables:
          TZ: !FindInMap [ TimezoneMap, !Ref LocalTimezone, TZ ]
          TZ_ABBREVS: !FindInMap [ TimezoneMap, !Ref LocalTimezone, Abbrevs ]
      Policies:
        - Statement:
            - Effect: Allow
              Action: 'events:ListRules'
              Resource: '*'
            - Effect: Allow
              Action:
                - 'events:EnableRule'
                - 'events:DisableRule'
              Resource:
                - !Sub
                  - "arn:aws:events:${Region}:${AccountId}:rule/*-${Suffix}"
                  - Region: !Ref "AWS::Region"
                    AccountId: !Ref "AWS::AccountId"
                    Suffix: !FindInMap [ TimezoneMap, !Ref LocalTimezone, STDAbbrev ]
                - !Sub
                  - "arn:aws:events:${Region}:${AccountId}:rule/*-${Suffix}"
                  - Region: !Ref "AWS::Region"
                    AccountId: !Ref "AWS::AccountId"
                    Suffix: !FindInMap [ TimezoneMap, !Ref LocalTimezone, DSTAbbrev ]
      Events:
        CreateEventRule:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source: [ "aws.events" ]
              detail-type: [ "AWS API Call via CloudTrail" ]
              detail:
                eventSource: [ "events.amazonaws.com" ]
                eventName: [ "PutRule" ]
        STDTransition:
          Type: Schedule
          Properties:
            Description: Transition to standard time rules.
            Schedule: !FindInMap [ TimezoneMap, !Ref LocalTimezone, STDTransition ]
            Input: !Sub
              - "{ \"enable\": \"${STD}\", \"disable\": \"${DST}\" }"
              - STD: !FindInMap [ TimezoneMap, !Ref LocalTimezone, STDAbbrev ]
                DST: !FindInMap [ TimezoneMap, !Ref LocalTimezone, DSTAbbrev ]
        DSTTransition:
          Type: Schedule
          Properties:
            Description: Transition to daylight savings time rules.
            Schedule: !FindInMap [ TimezoneMap, !Ref LocalTimezone, DSTTransition ]
            Input: !Sub
              - "{ \"enable\": \"${DST}\", \"disable\": \"${STD}\" }"
              - STD: !FindInMap [ TimezoneMap, !Ref LocalTimezone, STDAbbrev ]
                DST: !FindInMap [ TimezoneMap, !Ref LocalTimezone, DSTAbbrev ]
  EventsDSTFunctionLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}-EventsDST"
      RetentionInDays: 30
      KmsKeyId: !If [ HasLogEncryption, !Ref LogKMSKeyARN, !Ref "AWS::NoValue" ]
  EventsDSTFunctionMonitor:
    Type: AWS::CloudFormation::Stack
    Condition: HasLambdaMonitor
    Properties:
      Parameters:
        FunctionName: !Sub "${AWS::StackName}-EventsDST"
        LogGroupName: !Ref EventsDSTFunctionLogs
        LogSubscriptionARN: !Ref LogSubscriptionARN
        AlarmTopicARN: !Ref LambdaMonitorAlarmTopicARN
        DurationAlarmThreshold: 96
      TemplateURL: !Ref LambdaMonitorTemplateURL
